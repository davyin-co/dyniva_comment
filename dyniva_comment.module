<?php

/**
 * @file
 * Contains dyniva_comment.module.
 */
use Drupal\Core\Database\Query\AlterableInterface;
use Drupal\dyniva_comment\Plugin\Field\FieldWidget\CommentWidget;
use Drupal\lightning_core\OverrideHelper as Override;

/**
 * Implements hook_field_formatter_info_alter().
 * @param array $info
 */
function dyniva_comment_field_formatter_info_alter(array &$info) {
  $info['comment_default']['class'] = 'Drupal\dyniva_comment\Plugin\Field\FieldFormatter\CommentFormatter';
}

/**
 * Implements hook_field_widget_info_alter().
 * @param array $info
 */
function dyniva_comment_field_widget_info_alter(array &$info) {
  $info['comment_default']['class'] = 'Drupal\dyniva_comment\Plugin\Field\FieldWidget\CommentWidget';
}

/**
 * Implements hook_entity_type_alter().
 */
function dyniva_comment_entity_type_alter(array &$entity_types) {
  Override::entityHandler($entity_types['comment'], 'access', \Drupal\dyniva_comment\CommentAccessControlHandler::class);
}

/**
 * Implements hook_query_TAG_alter().
 */
function dyniva_comment_query_comment_filter_alter(AlterableInterface $query){
  if(\Drupal::moduleHandler()->moduleExists('ccms_manage')) return;

  /* @var NodeInterface $entity */
  $entity = $query->getMetaData('entity');
  $field_name = $query->getMetaData('field_name');
  $status = $entity->{$field_name}->status;
  if(!\Drupal::currentUser()->hasPermission('administer comment types') && \Drupal::currentUser()->id() != $entity->getOwnerId()){
    if(\Drupal::currentUser()->isAuthenticated()){
      // 自己发布的评论
      $query->leftJoin('comment_field_data','s','s.cid = c.pid and s.uid=' . \Drupal::currentUser()->id());
      $or = db_or();
      $or->condition('c.uid',\Drupal::currentUser()->id());
      $or->condition('s.cid',null,'IS NOT NULL');

      if(\Drupal::database()->schema()->tableExists('comment__access_permission')){
        // 匿名可见、登录用户可见
        $query->leftJoin('comment__access_permission','ap','ap.entity_id = c.cid');
        $or->condition('ap.access_permission_value', CommentWidget::OPEN_ANONYMOUS);
        $or->condition('ap.access_permission_value', CommentWidget::OPEN_AUTHENTICATED);
      }
      $query->condition($or);

      if(db_field_exists('comment_field_data', '_deleted')){
        $query->condition('c._deleted',0);
      }
    }else{
      if(\Drupal::database()->schema()->tableExists('comment__access_permission')){
        // 本身匿名可见
        $query->innerJoin('comment__access_permission','ap','ap.entity_id = c.cid and ap.access_permission_value=' . CommentWidget::OPEN_ANONYMOUS);
        // 父级匿名可见
        $query->leftJoin('comment_field_data','s','s.cid = c.pid');
        $query->leftJoin('comment__access_permission','sap','sap.entity_id = s.cid and sap.access_permission_value=' . CommentWidget::OPEN_ANONYMOUS);

        $or = db_or();
        $or->condition('s.cid',null,'IS NULL');
        $or->condition('sap.entity_id',null,'IS NOT NULL');
        $query->condition($or);

        if(db_field_exists('comment_field_data', '_deleted')){
          $query->condition('c._deleted',0);
        }
      }
    }
  }
  if(!empty($query->getOrderBy()) && \Drupal::database()->schema()->tableExists('comment__stick')){
    // 置顶排序
    $query->leftJoin('comment__stick','cs','cs.entity_id = c.cid');
    $order = &$query->getOrderBy();
    $order = array_merge(['cs.stick_value' => 'DESC'],$order);
  }
}